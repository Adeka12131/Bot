from config import *
from aiogram import types, Bot, Dispatcher, executor
from aiogram.types import InputFile

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

async def on_startup(_):
    await bot.send_message(chat_id=OWNER_ID,text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ —á—Ç–æ –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Å –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ —Ç–æ –≤–∞–º —Å—Ç–æ–∏—Ç –Ω–∞–∂–∞—Ç—å /start')

main_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
b_quest3 = types.KeyboardButton('–ö—Ç–æ –≤—ã —Ç–∞–∫–∏–µ?')
b_quest4 = types.KeyboardButton('–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?')
main_keyboard.row(b_quest3).add(b_quest4)

question1_kb = types.InlineKeyboardMarkup()
question1 = types.InlineKeyboardButton(text="–û –Ω–∞—Å üßëüèª‚Äçüíª",callback_data="–ó–∞–Ω–∏–º–∞–µ–º—Å—è —á–µ–º —Ç–æ")
question2 = types.InlineKeyboardButton(text="–ß–µ–º –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è‚ùî",callback_data="–ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º")
question4 = types.InlineKeyboardButton(text="–ù–∞—à–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏‚ú®",callback_data="–ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –º—ã")
question1_kb.add(question1).add(question2).add(question4)

question3_kb = types.InlineKeyboardMarkup()
question3 = types.InlineKeyboardButton(' –ü–æ Whatsapp',url = 'https://web.whatsapp.com/:')
question5 = types.InlineKeyboardButton(' –ü–æ Telegram',url = 'https://web.telegram.org/')
question6 = types.InlineKeyboardButton(' –ü–æ Instagram',url = 'https://www.instagram.com/:')
question3_kb.add(question3).add(question5).add(question6)

@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    photo_path = (r"C:\Users\User\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\–∫–æ—Ç\–ö–æ—Ç.jpg.jpg")
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±–æ—Ç –∫–æ–º–∞–Ω–¥—ã WorkBench. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?', reply_markup=main_keyboard)
    await bot.send_photo(message.chat.id, InputFile(photo_path))


@dp.callback_query_handler(lambda callback_query: True)
async def handle_callback_query(callback_query: types.CallbackQuery):
    if callback_query.data == "–ó–∞–Ω–∏–º–∞–µ–º—Å—è —á–µ–º —Ç–æ":
        await bot.send_message(callback_query.from_user.id, '''–ú—ã - –æ–¥–Ω–æ –∏–∑ —Å–∞–º—ã—Ö –±—ã—Å—Ç—Ä–æ—Ä–∞—Å—Ç—É—â–∏—Ö –∞–≥–µ–Ω—Å—Ç–≤üåê
–ó–∞–Ω–∏–º–∞–µ–º—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç–æ–≤. 
–¢–∞–∫–∂–µ —É –Ω–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—á–∏–≤–∞–µ–º–∞—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞(—Ç.–µ. –æ–±—É—á–µ–Ω–∏–µ) —Å –±—É–¥—É—â–µ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º –≤ –∫–æ–º–∞–Ω–¥—É! ‚ö°''')
    elif callback_query.data == "–ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º":
        await bot.send_message(callback_query.from_user.id, '''–ú—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∞–π—Ç—ã –∏ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–∏—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç—ã,–∞ —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º UI/UX –¥–∏–∑–∞–π–Ωüë©üèª‚Äçüé®
–¢–∞–∫–∂–µ –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —Å—Ç–∞–∂–µ—Ä–æ–≤ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ. –ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤ html5, css3, java script, node js, REACT –∏ python.üìö''')
    elif callback_query.data == "–ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –º—ã":
        await bot.send_message(callback_query.from_user.id,
'''–ù–∞—à –≥–ª–∞–≤–Ω—ã–π –ø–ª—é—Å - —ç—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –ø—Ä–∏ –ª—é–±–æ–º –∑–∞–∫–∞–∑–µü§ò
–í —Å–≤–æ–∏—Ö –∑–∞–¥–∞—á–∞—Ö,–º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—è –ø—Ä–æ–¥—É–∫—Ç –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.üòé 
–£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç—Ç–∞–ø–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ü—Ä–µ–∂–¥–µ —á–µ–º –ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Ä—ã–Ω–æ–∫,–º—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –µ–≥–æ. –¢–∞–∫–∂–µ —É –Ω–∞—Å –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã –∏ –æ—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æüí∞‚ò∫Ô∏è
        ''')

@dp.message_handler()
async def main_message(message: types.Message):
    if message.text == '–ö—Ç–æ –≤—ã —Ç–∞–∫–∏–µ?':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:', reply_markup=question1_kb)
    elif message.text == '–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?':
        await message.answer('–ü–æ –≤–∞—Ç—Å–∞–ø–ø',reply_markup=question3_kb)

        
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)
    